<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{
    public function myFindAll_court_1()
    {
        return $this->createQueryBuilder('a')
            ->getQuery()
            ->getResult();
    }

    /* Fonction avec Jointure : */
    public function getArticleAvecCommentaires()
    {
        $qb = $this->createQueryBuilder('a')
            ->leftJoin('a.commentaires', 'c')
            ->addSelect('c');

        return $qb->getQuery()->getResult();
    }


    /**
     * La méthode ci-dessous permet de récupérer tous les articles qui correspondent à une liste de catégories (fournie dans un tableau en paramètre).
     */
    public function getArticlesAvecCategories(array $liste_categories)
    {
        $qb = $this->createQueryBuilder('a');

        // On fait une jointure avec l'entité Categorie, avec pour alias 'c' :
        $qb->join('a.categories', 'c')
            // Puis on filtre sur les noms de catégories à l'aide d'un "IN" :
            ->where($qb->expr()->in('c.nom', $liste_categories));

        // Enfin, on retourne le résultat :
        return $qb->getQuery()
                    ->getResult();
    }


    public function getSelectList()
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.publication = 1'); // on filtre sur l'attribut "publication"

        // et on retourne simplement le QueryBuilder, et non la Query : attention !!
        return $qb;
    }

}
